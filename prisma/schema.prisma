// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEON_DATABASE_URL")
}

enum PaintingState {
  FOR_SALE // √Ä vendre
  OFF_SALE // Hors vente
}

enum ArtTag {
  ANIMAL
  PERSONNAGE
  PAYSAGE
  COMMANDE_PERSONNALISEE
}

enum SubscriptionType {
  NEW_ARTWORK // Nouvelles ≈ìuvres
  EVENTS      // √âv√©nements
  BOTH        // Les deux
}

model Painting {
  id           Int           @id @default(autoincrement())
  name         String // Nom de la peinture
  description  String? // Description d√©taill√©e de l'≈ìuvre
  date         DateTime      @default(now()) // Date de cr√©ation ou d'exposition
  price        Decimal // Prix de la peinture
  image        String // URL ou chemin d'image
  tags         PaintingTag[] // Relation many-to-many avec les tags
  state        PaintingState @default(FOR_SALE) // √âtat : "vendu" ou "√† vendre"
  slug         String        @unique // Identifiant unique (slug)
  artist       String // Nom de l'artiste
  width        Decimal // Largeur en cm
  height       Decimal // Hauteur en cm
  paintingType String // Technique de peinture (ex : huile, aquarelle, acrylique, etc)
}

model PaintingTag {
  id         Int      @id @default(autoincrement())
  painting   Painting @relation(fields: [paintingId], references: [id], onDelete: Cascade)
  paintingId Int
  tag        ArtTag

  @@unique([paintingId, tag]) // Garantit qu'un tag n'est ajout√© qu'une seule fois √† une peinture
}

model FAQ {
  id        Int      @id @default(autoincrement())
  question  String // La question
  answer    String // La r√©ponse
  order     Int      @default(0) // Ordre d'affichage
  isActive  Boolean  @default(true) // Pour activer/d√©sactiver une entr√©e sans la supprimer
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id            Int       @id @default(autoincrement())
  title         String // Titre de l'√©v√©nement
  description   String // Description d√©taill√©e
  location      String // Lieu de l'√©v√©nement
  price         Decimal? // Prix de l'entr√©e (optionnel)
  startDate     DateTime // Date et heure de d√©but
  showStartTime Boolean   @default(true) // Contr√¥le si l'heure de d√©but est affich√©e
  endDate       DateTime? // Date et heure de fin (optionnel)
  showEndTime   Boolean   @default(true) // Contr√¥le si l'heure de fin est affich√©e
  imageUrl      String? // Image associ√©e √† l'√©v√©nement (optionnel)
  url           String? // URL externe pour plus d'informations (optionnel)
  isActive      Boolean   @default(true) // Pour activer/d√©sactiver un √©v√©nement
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model NewsletterSubscriber {
  id                Int              @id @default(autoincrement())
  email             String           @unique
  subscriptionType  SubscriptionType @default(BOTH)
  isActive          Boolean          @default(true)
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  unsubscribedAt    DateTime?
  unsubscribeToken  String?          @unique // üîë pour d√©sinscription s√©curis√©e
}


// npx prisma migrate dev --name update-schema
// npx prisma migrate deploy
