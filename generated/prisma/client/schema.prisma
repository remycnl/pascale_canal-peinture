// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Painting {
  id           Int           @id @default(autoincrement())
  name         String // Nom de la peinture
  description  String? // Description détaillée de l'œuvre
  date         DateTime      @default(now()) // Date de création ou d'exposition
  price        Decimal // Prix de la peinture
  image        String // URL ou chemin d'image
  tag          String // Type ou style artistique (ex : portrait, paysage, vaches, etc)
  state        PaintingState @default(FOR_SALE) // État : "vendu" ou "à vendre"
  slug         String        @unique // Identifiant unique (slug)
  artist       String // Nom de l'artiste
  width        Decimal // Largeur en cm
  height       Decimal // Hauteur en cm
  paintingType String // Type de peinture (ex : huile, aquarelle, acrylique, etc)
}

model FAQ {
  id        Int      @id @default(autoincrement())
  question  String // La question
  answer    String // La réponse
  order     Int      @default(0) // Ordre d'affichage
  isActive  Boolean  @default(true) // Pour activer/désactiver une entrée sans la supprimer
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PaintingState {
  FOR_SALE // À vendre
  SOLD // Vendu
}

model Event {
  id            Int       @id @default(autoincrement())
  title         String // Titre de l'événement
  description   String // Description détaillée
  location      String // Lieu de l'événement
  price         Decimal? // Prix de l'entrée (optionnel)
  startDate     DateTime // Date et heure de début
  showStartTime Boolean   @default(true) // Contrôle si l'heure de début est affichée
  endDate       DateTime? // Date et heure de fin (optionnel)
  showEndTime   Boolean   @default(true) // Contrôle si l'heure de fin est affichée
  imageUrl      String? // Image associée à l'événement (optionnel)
  url           String? // URL externe pour plus d'informations (optionnel)
  isActive      Boolean   @default(true) // Pour activer/désactiver un événement
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// npx prisma migrate dev --name update-schema
// npx prisma migrate deploy
